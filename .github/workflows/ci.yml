name: CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      release:
        type: boolean
        default: false
  push:
    branches: main
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"
  schedule:
    - cron: 0 16 * * *

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_ROOT: .

jobs:
  cache-vcpkg:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: restore vcpkg
        id: restore-vcpkg
        uses: actions/cache/restore@v4
        with:
          path: ${{env.RUST_ROOT}}/vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
          lookup-only: true

      - name: setup vcpkg
        if: ${{steps.restore-vcpkg.outputs.cache-hit!='true'}}
        run: ${{env.RUST_ROOT}}/vcpkg/vcpkg-setup.ps1
        shell: pwsh

      - name: install vcpkg dependencies
        if: ${{steps.restore-vcpkg.outputs.cache-hit!='true'}}
        run: ${{env.RUST_ROOT}}/vcpkg/vcpkg-install.ps1
        shell: pwsh

      - name: save vcpkg
        if: ${{steps.restore-vcpkg.outputs.cache-hit!='true'}}
        uses: actions/cache/save@v4
        with:
          path: ${{env.RUST_ROOT}}/vcpkg/installed
          key: ${{steps.restore-vcpkg.outputs.cache-primary-key}}

  cargo-machete:
    if: ${{!inputs.release}}
    needs: cache-vcpkg
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: restore vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
      - name: Machete
        uses: bnjbvr/cargo-machete@main

  # cargo-test:
  #   if: ${{!inputs.release}}
  #   needs: cache-vcpkg
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       machine: [windows-latest, ubuntu-latest]
  #   runs-on: ${{matrix.machine}}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: choco install pkgconfiglite
  #       if: ${{runner.os == 'Windows'}}
  #     - name: Set up pixi
  #       uses: prefix-dev/setup-pixi@v0.8.3
  #       with:
  #         run-install: false

  #     - name: restore vcpkg
  #       if: ${{ runner.os == 'Windows'}}
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: ./vcpkg/installed
  #         key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}

  #     - uses: dtolnay/rust-toolchain@nightly

  #     - name: Install nextest
  #       uses: taiki-e/install-action@nextest

  #     - name: Install cargo-llvm-cov
  #       uses: taiki-e/install-action@cargo-llvm-cov

  #     - name: cargo-test
  #       run: ${{env.RUST_ROOT}}/scripts/cargo-test.ps1
  #       shell: pwsh

  #     - name: Upload results to Codecov
  #       if: ${{ !cancelled() }}
  #       uses: codecov/codecov-action@v5

  #     - name: Upload test results to Codecov
  #       if: ${{ !cancelled() }}
  #       uses: codecov/test-results-action@v1
  #       with:
  #         fail_ci_if_error: true
  #         token: ${{ secrets.CODECOV_TOKEN }}

  cargo-doc:
    needs: cache-vcpkg
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: restore vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
      - name: cargo-doc
        run: ${{env.RUST_ROOT}}/scripts/cargo-doc.ps1
        shell: pwsh

      - name: upload doc
        if: ${{inputs.release}}
        uses: actions/upload-artifact@v4
        with:
          name: rust-doc
          path: rust/dist/*.7z
          if-no-files-found: error

  cargo-clippy:
    if: ${{!inputs.release}}
    needs: cache-vcpkg
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: restore vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
      - name: cargo-clippy
        run: |
          ${{env.RUST_ROOT}}/scripts/cargo-clippy.ps1
        shell: pwsh

  cargo-fmt:
    if: ${{!inputs.release}}
    needs: cache-vcpkg
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: restore vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
      - name: cargo-fmt
        run: |
          ${{env.RUST_ROOT}}/scripts/cargo-fmt.ps1
        shell: pwsh

  examples:
    if: ${{!inputs.release}}
    needs: cache-vcpkg
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: restore vcpkg
        if: ${{ runner.os == 'Windows' }}
        uses: actions/cache/restore@v4
        with:
          path: ./vcpkg/installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('./vcpkg/vcpkg.json','./vcpkg/triplet/**') }}
      - name: run examples
        run: |
          ${{env.RUST_ROOT}}/scripts/examples.ps1
        shell: pwsh
